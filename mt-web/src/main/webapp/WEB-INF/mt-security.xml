<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:component-scan base-package="com.maqs.moneytracker.web.security" />

	<bean id="tokenManager" class="com.maqs.moneytracker.security.TokenManagerImpl">
	</bean>

	<bean id="userDetailsService" class="com.maqs.moneytracker.security.CustomUserDetailsService" />

	<bean id="restAuthenticationFilter"
		class="com.maqs.moneytracker.web.security.CustomTokenAuthenticationFilter">
		<constructor-arg type="java.lang.String">
			<value>/api/**</value>
		</constructor-arg>
		<property name="authenticationManager" ref="noOpAuthenticationManager" />
		<property name="authenticationSuccessHandler" ref="authSuccessHandler" />
		<property name="authenticationFailureHandler" ref="authFailureHandler" />
	</bean>

	<!-- Enable the annotations for defining the secure role -->
	<security:global-method-security
		secured-annotations="enabled" />

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="httpAuthenticationEntryPoint"
		authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/user/token"
			access="permitAll" />
		<security:custom-filter ref="restAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/api/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/api/**" access="permitAll" method="OPTIONS"/>
		<security:custom-filter position="LOGOUT_FILTER"
			ref="logoutFilter" />
	</security:http>

	<bean id="sif"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />

	<bean id="securityContextLogoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />

	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<property name="filterProcessesUrl" value="/logout" />
		<constructor-arg index="0">
			<ref bean="httpLogoutSuccessHandler" />
		</constructor-arg>
		<constructor-arg index="1">
			<list>
				<ref bean="securityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="daoAuthenticationProvider">

		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>

	<security:authentication-manager alias="noOpAuthenticationManager">
		<security:authentication-provider
			ref="noOpAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="noOpAuthenticationProvider" class="com.maqs.moneytracker.web.security.NoOpAuthenticationProvider" />
	
	<bean id="securityContextHolderAwareRequestFilter"
		class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />


</beans>